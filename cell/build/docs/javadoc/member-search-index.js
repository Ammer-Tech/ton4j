memberSearchIndex = [{"p":"org.ton.java.cell","c":"CellBuilder","l":"beginCell()"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"beginCell(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"beginParse(Cell)","url":"beginParse(org.ton.java.cell.Cell)"},{"p":"org.ton.java.cell","c":"Cell","l":"bits"},{"p":"org.ton.java.cell","c":"BocHeader","l":"BocHeader()","url":"%3Cinit%3E()"},{"p":"org.ton.java.cell","c":"Cell","l":"Cell()","url":"%3Cinit%3E()"},{"p":"org.ton.java.cell","c":"Cell","l":"Cell(BitString, List<Cell>, int)","url":"%3Cinit%3E(org.ton.java.bitstring.BitString,java.util.List,int)"},{"p":"org.ton.java.cell","c":"Cell","l":"Cell(int)","url":"%3Cinit%3E(int)"},{"p":"org.ton.java.cell","c":"Cell","l":"clone()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"clone()"},{"p":"org.ton.java.cell","c":"Cell","l":"deserializeBoc(byte[])"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"deserializeEdge(CellSlice, int, BitString)","url":"deserializeEdge(org.ton.java.cell.CellSlice,int,org.ton.java.bitstring.BitString)"},{"p":"org.ton.java.cell","c":"TonPfxHashMap","l":"deserializeEdge(CellSlice, int, BitString)","url":"deserializeEdge(org.ton.java.cell.CellSlice,int,org.ton.java.bitstring.BitString)"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"deserializeLabel(CellSlice, int)","url":"deserializeLabel(org.ton.java.cell.CellSlice,int)"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"elements"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"endCell()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"endParse()"},{"p":"org.ton.java.cell","c":"Cell","l":"fromBoc(byte[])"},{"p":"org.ton.java.cell","c":"Cell","l":"fromBoc(String)","url":"fromBoc(java.lang.String)"},{"p":"org.ton.java.cell","c":"Cell","l":"fromHex(String)","url":"fromHex(java.lang.String)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"getFreeBits()"},{"p":"org.ton.java.cell","c":"Cell","l":"getFreeRefs()"},{"p":"org.ton.java.cell","c":"Cell","l":"getMaxRefs()"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"getUsedBits()"},{"p":"org.ton.java.cell","c":"Cell","l":"getUsedRefs()"},{"p":"org.ton.java.cell","c":"Cell","l":"hash()"},{"p":"org.ton.java.cell","c":"Cell","l":"isExotic"},{"p":"org.ton.java.cell","c":"CellSlice","l":"isSliceEmpty()"},{"p":"org.ton.java.cell","c":"Leaf","l":"Leaf(Cell, Cell)","url":"%3Cinit%3E(org.ton.java.cell.Cell,org.ton.java.cell.Cell)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadAddress()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadBit()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadBits(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadBytes(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadCoins()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadDict(int, Function<BitString, Object>, Function<Cell, Object>)","url":"loadDict(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadDictE(int, Function<BitString, Object>, Function<Cell, Object>)","url":"loadDictE(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadDictPfx(int, Function<BitString, Object>, Function<Cell, Object>)","url":"loadDictPfx(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadDictPfxE(int, Function<BitString, Object>, Function<Cell, Object>)","url":"loadDictPfxE(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadEither()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadEitherXorRefX()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadInt(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadMaybeRefX()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadMaybeX()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadRef()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadRefs(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadRefX()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadString(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadUint(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadUintLEQ(BigInteger)","url":"loadUintLEQ(java.math.BigInteger)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadUintLess(BigInteger)","url":"loadUintLess(java.math.BigInteger)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadUnary()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"loadVarUInteger(BigInteger)","url":"loadVarUInteger(java.math.BigInteger)"},{"p":"org.ton.java.cell","c":"Node","l":"Node(BitString, Cell)","url":"%3Cinit%3E(org.ton.java.bitstring.BitString,org.ton.java.cell.Cell)"},{"p":"org.ton.java.cell","c":"Cell","l":"parseBocHeader(byte[])"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadBit()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadBits(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadCoins()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadDict(int, Function<BitString, Object>, Function<Cell, Object>)","url":"preloadDict(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadDictE(int, Function<BitString, Object>, Function<Cell, Object>)","url":"preloadDictE(int,java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadInt(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadRef()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadRefs(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"preloadUint(int)"},{"p":"org.ton.java.cell","c":"Cell","l":"print()"},{"p":"org.ton.java.cell","c":"Cell","l":"print(String)","url":"print(java.lang.String)"},{"p":"org.ton.java.cell","c":"Cell","l":"readRefCursor"},{"p":"org.ton.java.cell","c":"Cell","l":"refs"},{"p":"org.ton.java.cell","c":"Cell","l":"refsInt"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"serialize(Function<Object, BitString>, Function<Object, Cell>)","url":"serialize(java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"TonHashMapE","l":"serialize(Function<Object, BitString>, Function<Object, Cell>)","url":"serialize(java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"TonPfxHashMap","l":"serialize(Function<Object, BitString>, Function<Object, Cell>)","url":"serialize(java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"TonPfxHashMapE","l":"serialize(Function<Object, BitString>, Function<Object, Cell>)","url":"serialize(java.util.function.Function,java.util.function.Function)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipBit()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipBits(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipCoins()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipDict(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipDictE()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipInt(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipRefs(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"skipUint(int)"},{"p":"org.ton.java.cell","c":"CellSlice","l":"sliceToCell()"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeAddress(Address)","url":"storeAddress(org.ton.java.address.Address)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBit(boolean)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBits(boolean[])"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBits(List<Boolean>)","url":"storeBits(java.util.List)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBitString(BitString)","url":"storeBitString(org.ton.java.bitstring.BitString)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBytes(byte[], int)","url":"storeBytes(byte[],int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBytes(byte[])"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeBytes(List<Byte>)","url":"storeBytes(java.util.List)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeCoins(BigInteger)","url":"storeCoins(java.math.BigInteger)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeDict(Cell)","url":"storeDict(org.ton.java.cell.Cell)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeInt(BigInteger, int)","url":"storeInt(java.math.BigInteger,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeInt(byte, int)","url":"storeInt(byte,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeInt(int, int)","url":"storeInt(int,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeInt(long, int)","url":"storeInt(long,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeInt(short, int)","url":"storeInt(short,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeRef(Cell)","url":"storeRef(org.ton.java.cell.Cell)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeRefs(Cell...)","url":"storeRefs(org.ton.java.cell.Cell...)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeRefs(List<Cell>)","url":"storeRefs(java.util.List)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeSlice(CellSlice)","url":"storeSlice(org.ton.java.cell.CellSlice)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeString(String)","url":"storeString(java.lang.String)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(BigInteger, int)","url":"storeUint(java.math.BigInteger,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(Byte, int)","url":"storeUint(java.lang.Byte,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(int, int)","url":"storeUint(int,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(long, int)","url":"storeUint(long,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(short, int)","url":"storeUint(short,int)"},{"p":"org.ton.java.cell","c":"CellBuilder","l":"storeUint(String, int)","url":"storeUint(java.lang.String,int)"},{"p":"org.ton.java.cell","c":"Cell","l":"toBase64()"},{"p":"org.ton.java.cell","c":"Cell","l":"toBoc()"},{"p":"org.ton.java.cell","c":"Cell","l":"toBoc(boolean, boolean, boolean, int)","url":"toBoc(boolean,boolean,boolean,int)"},{"p":"org.ton.java.cell","c":"Cell","l":"toBoc(boolean, boolean, boolean)","url":"toBoc(boolean,boolean,boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toBoc(boolean, boolean)","url":"toBoc(boolean,boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toBoc(boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toFile()"},{"p":"org.ton.java.cell","c":"Cell","l":"toFile(boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toFile(String, boolean, boolean, boolean, int)","url":"toFile(java.lang.String,boolean,boolean,boolean,int)"},{"p":"org.ton.java.cell","c":"Cell","l":"toFile(String, boolean)","url":"toFile(java.lang.String,boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toHex()"},{"p":"org.ton.java.cell","c":"Cell","l":"toHex(boolean, boolean, boolean, int)","url":"toHex(boolean,boolean,boolean,int)"},{"p":"org.ton.java.cell","c":"Cell","l":"toHex(boolean, boolean, boolean)","url":"toHex(boolean,boolean,boolean)"},{"p":"org.ton.java.cell","c":"Cell","l":"toHex(boolean)"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"TonHashMap(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"org.ton.java.cell","c":"TonHashMap","l":"TonHashMap(int)","url":"%3Cinit%3E(int)"},{"p":"org.ton.java.cell","c":"TonHashMapE","l":"TonHashMapE(int)","url":"%3Cinit%3E(int)"},{"p":"org.ton.java.cell","c":"TonPfxHashMap","l":"TonPfxHashMap(int)","url":"%3Cinit%3E(int)"},{"p":"org.ton.java.cell","c":"TonPfxHashMapE","l":"TonPfxHashMapE(int)","url":"%3Cinit%3E(int)"},{"p":"org.ton.java.cell","c":"Cell","l":"toString()"},{"p":"org.ton.java.cell","c":"CellSlice","l":"toString()"},{"p":"org.ton.java.cell","c":"Cell","l":"writeCell(Cell)","url":"writeCell(org.ton.java.cell.Cell)"}]